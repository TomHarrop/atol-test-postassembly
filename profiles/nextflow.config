// sanger-tol job config is here:
// https://github.com/sanger-tol/genomeassembly/blob/dev/conf/base.config

profiles {
    spartan {
        // Spartan limits. There is a bigmem queue with 3 TB available
        params {
            max_cpus = 72
            max_memory = 710000.MB
            max_time = 90.d
        }

        //  Note, it's tempting to use the apptainer profile, but the nf-core
        //  (and some sanger-tol) pipelines have a conditional
        //  `workflow.containerEngine == 'singularity'` that prevents using the
        //  right URL with apptainer.
        singularity {
            enabled = true
            autoMounts = true
            runOptions = '-B $PWD,$TMPDIR,/data --nv -H $(mktemp -d) --pwd $PWD --containall --cleanenv --writable-tmpfs'
        }

        // Submit up to 256 concurrent jobs (Setonix work partition max)
        executor {
            queueSize = 128
        }

        // Define process resource limits
        process {
            resourceLimits = [
                memory: 710000.MB,
                cpus: 72,
            ]
            executor = 'slurm'
            module = 'Apptainer/1.3.3'
            cache = 'lenient'
            stageInMode = 'symlink'
            queue = { task.memory > 710000.MB ? 'bigmem' : null }
        }
    }

    pawsey {
        workDir = "${MYSCRATCH}/atol-test-postassembly/.nextflow/work"

        params {
            max_cpus = 256
            max_memory = 1020.GB
            max_time = 4.d
        }

        //  Note, it's tempting to use the apptainer profile, but the nf-core
        //  (and some sanger-tol) pipelines have a conditional
        //  `workflow.containerEngine == 'singularity'` that prevents using the
        //  right URL with apptainer.
        singularity {
            enabled = true
            autoMounts = true
        }

        // Submit up to 256 concurrent jobs (Setonix work partition max)
        executor {
            queueSize = 128
        }

        // Define process resource limits
        process {
            resourceLimits = [
                memory: 1020.GB,
                cpus: 256,
            ]
            executor = 'slurm'
            module = 'singularity/4.1.0-nohost'
            cache = 'lenient'
            stageInMode = 'symlink'
            queue = { task.memory > 235520.MB ? 'highmem' : (task.time > 1.d ? 'long' : null) }
            // Try to avoid the long queue by redefining the time for jobs that
            // request more than 1.d on the first attempt. Subsequent attempts
            // won't be modified. 

            // Pawsey is giving me error 125 when the OOM killer is active. Try
            // to override the default spec (which is here:
            // https://github.com/sanger-tol/genomeassembly/blob/31b508a3bd8998a27f6d06d5dc41bea4707b4a03/conf/base.config#L18)
            errorStrategy = { task.exitStatus in ((130..145) + 104 + 125) ? 'retry' : 'finish' }

            // Reduce the time for MINIMAP2_ALIGN to avoid the long queue.
            // FIXME: should be 1.d
            withName: '.*MINIMAP2_ALIGN.*' {
                time = { task.attempt == 1 ? 12.h : null }
            }
            withName: '.*CPRETEXT.*' {
                time = { task.attempt == 1 ? 12.h : null }
            }
            withName: '.*MERQURYFK_MERQURYFK.*' {
                time = { task.attempt == 1 ? 12.h : null }
            }

            // Deal with hard coded profiles in subworkflows
            withName: SANGER_TOL_BTK {
                ext.executor = null
                ext.profiles = "singularity,pawsey"
            }
            withName: SANGER_TOL_CPRETEXT {
                ext.executor = null
                ext.profiles = "singularity,pawsey"
            }

            // BUSCO is taking a lot of memory so grab a whole node.
            // for sanger-tol/genomeassembly I also had to set
            // container = 'https://depot.galaxyproject.org/singularity/busco:5.8.2--pyhdfd78af_0'
            withName: '.*BUSCO.*' {
                time = { task.attempt == 1 ? 1.d : null }
                memory = { task.attempt == 1 ? 128.GB : null }
            }

            // Default memory
            memory = 8.Gb

            // Manual overrides
            withName: '.*MERQURYFK.*' {
                memory = { task.attempt == 1 ? 72.Gb : null }
            }

            withName: '.*PARAMS_CHECK.*' {
                memory = { task.attempt * 8.Gb }
            }

            withName: '.*SAMPLESHEET_CHECK.*' {
                memory = { task.attempt * 8.Gb }
            }

            withName: '.*FETCH_ENSEMBL_METADATA.*' {
                memory = { task.attempt * 8.Gb }
            }

            withName: '.*SUMMARYGENOME.*' {
                memory = { task.attempt * 9.Gb }
            }

            withName: '.*FASTK_FASTK.*' {
                memory = { task.attempt * 48.Gb }
            }
        }
        aws {
            client {
                endpoint = 'https://projects.pawsey.org.au'
                s3PathStyleAccess = true
                maxConnections = 4
                maxErrorRetry = 20
                uploadMaxAttempts = 20
            }
        }
    }
}
